Харківський національний університет радіоелектроніки
Факультет комп'ютерних наук
Катедра програмної інженерії




	

ЗВІТ
з практичного заняття №2
з дисципліни  «Архітектура програмного забезпечення»
на тему: «Архітектура відомих програмних систем»






Виконав
ст. гр. ПЗПІ-22-3
Ткаченко Євген Андрійович

Перевірив
ст. викладач катедри ПІ
Сокорчук Ігор Петрович


















Харків 2025
ІСТОРІЯ ЗМІН
 
№	Дата	Версія звіту	Опис змін та виправлень
1	10.05.2025	0.1	Створено загальну структуру звіту
2	10.05.2025	0.1	Створено пункти «Завдання»
3	11.05.2025	0.1	Створено пункти «Опис виконаної роботи»
4	12.05.2025	0.1	Заповнено додаток Б та В. Надано приклади коду.
5	13.05.2025	0.1	Створено посилання на відео з доповіддю

























1 ЗАВДАННЯ

Завданням на дане практичне завдання  можна вважати дослідження архітектури однієї з відомих складних програмних систем. Зокрема було обрано платформу TikTok, а отже слід дослідити саме її архітектуру.

2 ОПИС ВИКОНАНОЇ РОБОТИ

Підготовлено доповідь про архітектуру TikTok, представлену у вигляді презентації з численними слайдами, прикладами інтерфейсів та поясненнями. Слайди наведено в додатку Б, відео з розповіддю — у додатку А.
Архітектура TikTok — це високонавантажена мікросервісна система, оптимізована для масштабованого стримінгу відео, персоналізації контенту та реального часу. Платформа підтримує мільярди запитів щодня завдяки гібридному стеку технологій (C++, Python, Java, Go) і глибокій інтеграції з машинним навчанням. Основні компоненти включають:
•	Content Delivery Network (CDN) для швидкої доставки відео
•	Recommendation Engine на базі глибокого навчання
•	User Service Layer для авторизації, профілювання, аналітики
•	Live Interaction Layer (коментарі, лайки, стріми)
•	Moderation System для фільтрації контенту в реальному часі
Доповідь висвітлює:
•	Проблематику, яку вирішує TikTok: швидке споживання контенту, персоналізація, масштабування відеострімів.
•	Мікросервісну архітектуру та асинхронну взаємодію між сервісами (через RPC, Kafka, Redis).
•	Застосування ML/AI у Recommendation System (класифікація, кластеризація, ранжування).
•	Алгоритми персоналізації: від поведінкових патернів до прогнозування інтересів.
•	Відеообробку: транскодування, оптимізація форматів, автогенерація обкладинок.
•	Роботу зі стрімінгом і живими ефірами (RTMP, WebRTC).
•	Безпеку: виявлення ботів, фільтрація шкідливого контенту, авторські права (Content ID).
•	Інтернаціоналізацію та масштабування інфраструктури під різні ринки.
Наведено приклади:
•	Виклику API для завантаження відео.
•	Налаштування ML-моделі для рекомендацій.
•	Сценарії обробки live-коментарів.
•	Інтеграції з аналітичними сервісами (наприклад, Flink, ClickHouse).
Технологічна основа включає:
•	Backend: Java, Python, Go
•	ML stack: TensorFlow, PyTorch
•	Frontend: Swift (iOS), Kotlin (Android), React Native
•	Хмарні сервіси: AWS, ByteDance Cloud, Google Cloud CDN
•	БД: MySQL, Cassandra, Elasticsearch


ВИСНОВКИ

У результаті виконання даної практичної роботи було розглянуто архітектуру TikTok.





































ДОДАТОК А
Посилання на відеозапис доповіді

Відеозапис доповіді на YouTube:  https://youtu.be/USzjrb0i8G0









































ДОДАТОК Б
Слайди презентації доповіді

  

Рисунок Б.1 – Титульний слайд.

  

Рисунок Б.2 – Зміст доповіді.


 

Рисунок Б.3 – Вступ.

 

Рисунок Б.4 – Загальний опис архітектури.







 

Рисунок Б.5 – Вимоги до архітектури.

	 

Рисунок Б.6 – Фронтенд та бекенд платформи.



 


Рисунок Б.7 – Основні функції та їх реалізація.

 

Рисунок Б.8 – База даних та аналітика.



